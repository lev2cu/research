<launch>

  <arg name="path"     default="$(env HOME)/ros/bags/rgbd" />
  <arg name="bag_name" default="rgbd.bag" />

  <!-- "camera" should uniquely identify the device. All topics are pushed down
       into the "camera" namespace, and it is prepended to tf frame ids. -->
  <arg name="camera" default="camera" />
  <arg name="rgb_frame_id"   default="/$(arg camera)_rgb_optical_frame" />
  <arg name="depth_frame_id" default="/$(arg camera)_depth_optical_frame" />

<<<<<<< HEAD
  <arg name="depth_registration" value="true" />
  <arg name="image_mode"         value="5" />
  <arg name="depth_mode"         value="5" />

=======
>>>>>>> d32abce3277f25248f21539b55ec3e8290d983ac
  <!-- device_id can have the following formats:
         "#1"              : Use first device found
         "2@3"             : Use device on USB bus 2, address 3
         "B00367707227042B": Use device with given serial number
    -->
  <arg name="device_id" default="#1" />

  <!-- By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml,
       where ${NAME} is of the form "[rgb|depth]_[serial#]", e.g. "depth_B00367707227042B".
       See camera_info_manager docs for calibration URL details. -->
  <arg name="rgb_camera_info_url"   default="" />
  <arg name="depth_camera_info_url" default="" />

  <!-- Arguments for remapping "rgb", "depth", "depth_registered" namespaces -->
  <arg name="rgb"              default="rgb" />
  <arg name="ir"               default="ir" />
  <arg name="depth"            default="depth" />
  <arg name="depth_registered" default="depth_registered" />
<<<<<<< HEAD
  <arg name="projector"        default="projector" />
=======
>>>>>>> d32abce3277f25248f21539b55ec3e8290d983ac

  <!-- Disable bond topics by default -->
  <arg name="bond" default="false" />
  <arg if="$(arg bond)" name="bond_arg" value="" />
  <arg unless="$(arg bond)" name="bond_arg" value="--no-bond" />

  <!-- Optionally launch manager in GDB, for debugging -->
  <arg name="debug" default="false" />
  <arg if="$(arg debug)" name="launch_prefix" value="xterm -e gdb --args" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <!-- Also globally disable bond heartbeat timeout in debug mode, so everything
       doesn't die when you hit a break point -->
  <param if="$(arg debug)" name="/bond_disable_heartbeat_timeout" value="true" />

  <!-- Nodelet manager, lives in top-level namespace -->
  <arg name="manager" value="$(arg camera)_nodelet_manager" />
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager"
        output="screen" launch-prefix="$(arg launch_prefix)" />

  <!-- Push down all topics/nodelets into "camera" namespace -->
  <group ns="$(arg camera)">

<<<<<<< HEAD
    <!-- Load driver and processing nodelets in standard configuration -->
    <include file="$(find ccny_rgbd_launch)/launch/include/live_data.launch">
      <!-- Could really use some syntactic sugar for this -->
=======
    <include file="$(find ccny_rgbd_launch)/launch/include/live_data.launch">
>>>>>>> d32abce3277f25248f21539b55ec3e8290d983ac
      <arg name="manager"               value="/$(arg manager)" /> <!-- Fully resolved -->
      <arg name="device_id"             value="$(arg device_id)" />
      <arg name="rgb_frame_id"          value="$(arg rgb_frame_id)" />
      <arg name="depth_frame_id"        value="$(arg depth_frame_id)" />
      <arg name="rgb_camera_info_url"   value="$(arg rgb_camera_info_url)" />
      <arg name="depth_camera_info_url" value="$(arg depth_camera_info_url)" />
      <arg name="rgb"                   value="$(arg rgb)" />
      <arg name="ir"                    value="$(arg ir)" />
      <arg name="depth"                 value="$(arg depth)" />
      <arg name="depth_registered"      value="$(arg depth_registered)" />
<<<<<<< HEAD
      <arg name="projector"             value="$(arg projector)" />
      <arg name="bond"                  value="$(arg bond_arg)" />

      <arg name="depth_registration"    value="$(arg depth_registration)" />
      <arg name="image_mode"            value="$(arg image_mode)" />
      <arg name="depth_mode"            value="$(arg depth_mode)" />
    </include>

    <include file="$(find ccny_rgbd_launch)/launch/include/proc_data.launch">
      <!-- Could really use some syntactic sugar for this -->
      <arg name="manager"               value="/$(arg manager)" /> <!-- Fully resolved -->
      <arg name="device_id"             value="$(arg device_id)" />
      <arg name="rgb_frame_id"          value="$(arg rgb_frame_id)" />
      <arg name="depth_frame_id"        value="$(arg depth_frame_id)" />
      <arg name="rgb_camera_info_url"   value="$(arg rgb_camera_info_url)" />
      <arg name="depth_camera_info_url" value="$(arg depth_camera_info_url)" />
      <arg name="rgb"                   value="$(arg rgb)" />
      <arg name="ir"                    value="$(arg ir)" />
      <arg name="depth"                 value="$(arg depth)" />

      <arg name="depth_registered"      value="$(arg depth_registered)" />
      <arg name="projector"             value="$(arg projector)" />
      <arg name="bond"                  value="$(arg bond_arg)" />
=======
      <arg name="bond"                  value="$(arg bond_arg)" />
    </include>

    <include file="$(find ccny_rgbd_launch)/launch/include/record_data.launch">
      <arg name="camera"                value="$(arg camera)" />
      <arg name="rgb"                   value="$(arg rgb)" />
      <arg name="depth"                 value="$(arg depth)" />
      <arg name="path"                  value="$(arg path)" />
      <arg name="bag_name"              value="$(arg bag_name)" />
>>>>>>> d32abce3277f25248f21539b55ec3e8290d983ac
    </include>

  </group> <!-- camera -->

<<<<<<< HEAD
  <include file="$(find ccny_rgbd_launch)/launch/include/record_data.launch">
    <arg name="camera"                value="$(arg camera)" />
    <arg name="rgb"                   value="$(arg rgb)" />
    <arg name="depth"                 value="$(arg depth)" />
    <arg name="depth_registered"      value="$(arg depth_registered)" />
    <arg name="projector"             value="$(arg projector)" />
    <arg name="path"                  value="$(arg path)" />
    <arg name="bag_name"              value="$(arg bag_name)" />
  </include>

=======
>>>>>>> d32abce3277f25248f21539b55ec3e8290d983ac
  <!-- Load reasonable defaults for the relative pose between cameras -->
  <include file="$(find openni_launch)/launch/kinect_frames.launch">
    <arg name="camera" value="$(arg camera)" />
  </include>

</launch>
